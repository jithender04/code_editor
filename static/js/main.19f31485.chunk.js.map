{"version":3,"sources":["Editor.js","Loader.js","useLocalStorage.js","App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","autoCloseTags","lineNumbers","matchTags","matchBrackets","Loader","rows","i","push","id","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","isloading","setisloading","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","load","setTimeout","clearTimeout","timeout","style","width","height","title","sandbox","frameBorder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VAwBe,SAASA,EACtBC,GACC,IAECC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SALF,EAQEC,oBAAS,GARX,mBAOOC,EAPP,KAOaC,EAPb,KAkBA,OACE,yBACEC,UAAS,2BACPF,EACI,GACA,cAGN,yBAAKE,UAAU,gBACZN,EACD,4BACEO,KAAK,SACLD,UAAU,sBACVE,QAAS,kBACPH,GACE,SAACI,GAAD,OACGA,OAIP,kBAAC,IAAD,CACEC,KACEN,EACIO,IACAC,QAKZ,kBAAC,aAAD,CACEC,eAtCN,SACEC,EACAC,EACAd,GAEAC,EAASD,IAoCLA,MAAOA,EACPK,UAAU,sBACVU,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMpB,EACNqB,MACE,qBACFC,eAAe,EACfC,aAAa,EACbC,WAAW,EACXC,eAAe,M,UCzCVC,EA7CA,WAEb,IADA,IAAIC,EAAO,GAELC,EAAI,EACRA,EAAI,EACJA,IAEAD,EAAKE,KACH,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,aAIrB,OACE,yBAAKuB,GAAG,UACL,IACD,yBAAKA,GAAG,aACR,yBAAKA,GAAG,aACN,yBAAKA,GAAG,OACLH,MCrBI,SAASI,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAD4B,EAG/B5B,oBAAS,WACjC,IAAM+B,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAV8C,mBAGlD/B,EAHkD,KAG3CsC,EAH2C,KAkBzD,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUzC,MAChD,CAACgC,EAAahC,IAEV,CAACA,EAAOsC,GCqFFI,MAnGf,WAAgB,IAAD,EAITxC,oBAAS,GAJA,mBAEXyC,EAFW,KAGXC,EAHW,OAMXf,EACE,OACA,IARS,mBAKNgB,EALM,KAKAC,EALA,OAWXjB,EACE,MACA,IAbS,mBAUNkB,EAVM,KAUDC,EAVC,OAgBXnB,EAAgB,KAAM,IAhBX,mBAeNoB,EAfM,KAeFC,EAfE,OAkBXhD,mBAAS,IAlBE,mBAiBNiD,EAjBM,KAiBEC,EAjBF,KAgDb,OA5BAb,qBAAU,WACR,IAAMc,EAAOC,YACX,WACEV,GAAa,KAEf,KAEF,OAAO,WACLW,aAAaF,MAEd,IAEHd,qBAAU,WACR,IAAMiB,EACJF,YAAW,WACTF,EAAU,qCAAD,OAECP,EAFD,qCAGEE,EAHF,uCAIGE,EAJH,0CAOR,KAEL,OAAO,kBACLM,aAAaC,MACd,CAACX,EAAME,EAAKE,IAGb,yBACEQ,MAAO,CACLC,MAAO,OACPC,OAAQ,SAGThB,EACC,kBAAC,EAAD,MAEA,oCACE,yBAAKtC,UAAU,iBACb,kBAACT,EAAD,CACEE,SAAS,MACTC,YAAY,OACZC,MAAO6C,EACP5C,SACE6C,IAGJ,kBAAClD,EAAD,CACEE,SAAS,MACTC,YAAY,MACZC,MAAO+C,EACP9C,SACE+C,IAGJ,kBAACpD,EAAD,CACEE,SAAS,aACTC,YAAY,KACZC,MAAOiD,EACPhD,SAAUiD,KAGd,yBAAK7C,UAAU,QACb,4BACE8C,OAAQA,EACRS,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZJ,MAAM,OACNC,OAAO,aC5FrBI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eACP,W","file":"static/js/main.19f31485.chunk.js","sourcesContent":["import React, {\n  useState,\n} from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material-palenight.css';\nimport 'codemirror/addon/edit/closetag';\nimport 'codemirror/addon/edit/matchtags';\nimport 'codemirror/addon/edit/closebrackets';\nimport 'codemirror/addon/edit/matchbrackets';\nimport 'codemirror/addon/hint/css-hint';\nimport 'codemirror/addon/hint/xml-hint';\nimport 'codemirror/addon/hint/javascript-hint';\nimport 'codemirror/addon/hint/show-hint';\n//import 'codemirror/addon/comment/comment';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCompressAlt,\n  faExpandAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nexport default function Editor(\n  props\n) {\n  const {\n    language,\n    displayName,\n    value,\n    onChange,\n  } = props;\n  const [open, setOpen] =\n    useState(true);\n\n  function handleChange(\n    editor,\n    data,\n    value\n  ) {\n    onChange(value);\n  }\n\n  return (\n    <div\n      className={`editor-container ${\n        open\n          ? ''\n          : 'collapsed'\n      }`}\n    >\n      <div className='editor-title'>\n        {displayName}\n        <button\n          type='button'\n          className='expand-collapse-btn'\n          onClick={() =>\n            setOpen(\n              (prevOpen) =>\n                !prevOpen\n            )\n          }\n        >\n          <FontAwesomeIcon\n            icon={\n              open\n                ? faCompressAlt\n                : faExpandAlt\n            }\n          />\n        </button>\n      </div>\n      <ControlledEditor\n        onBeforeChange={\n          handleChange\n        }\n        value={value}\n        className='code-mirror-wrapper'\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme:\n            'material-palenight',\n          autoCloseTags: true,\n          lineNumbers: true,\n          matchTags: true,\n          matchBrackets: true,\n          // showHint: true,\n          // extraKeys: {\n          //   Tab: 'autocomplete',\n          // },\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport './loader.css';\nconst Loader = () => {\n  var rows = [];\n  for (\n    var i = 0;\n    i < 8;\n    i++\n  ) {\n    rows.push(\n      <div className='cube'>\n        <div className='left' />\n        <div className='center' />\n        <div className='right' />\n        <div className='bottom' />\n        <div className='shadow' />\n      </div>\n    );\n  }\n  return (\n    <div id='loader'>\n      {' '}\n      <div id='vignette' />\n      <div id='container'>\n        <div id='pos'>\n          {rows}\n        </div>\n      </div>\n    </div>\n    // <div\n    //   style={{\n    //     height: '100%',\n    //     width: '100%',\n    //     backgroundImage: `url(${loading})`,\n    //     backgroundRepeat:\n    //       'no-repeat',\n    //     backgroundAttachment:\n    //       'fixed',\n    //     backgroundPosition:\n    //       'center',\n    //     backgroundSize:\n    //       'cover',\n    //   }}\n    // ></div>\n  );\n};\n\nexport default Loader;\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n","import React, {\n  useState,\n  useEffect,\n} from 'react';\nimport Editor from './Editor';\nimport Loader from './Loader';\nimport useLocalStorage from './useLocalStorage';\n\nfunction App() {\n  const [\n    isloading,\n    setisloading,\n  ] = useState(true);\n  const [html, setHtml] =\n    useLocalStorage(\n      'html',\n      ''\n    );\n  const [css, setCss] =\n    useLocalStorage(\n      'css',\n      ''\n    );\n  const [js, setJs] =\n    useLocalStorage('js', '');\n  const [srcDoc, setSrcDoc] =\n    useState('');\n\n  useEffect(() => {\n    const load = setTimeout(\n      () => {\n        setisloading(false);\n      },\n      3000\n    );\n    return () => {\n      clearTimeout(load);\n    };\n  }, []);\n\n  useEffect(() => {\n    const timeout =\n      setTimeout(() => {\n        setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n      `);\n      }, 250);\n\n    return () =>\n      clearTimeout(timeout);\n  }, [html, css, js]);\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      {isloading ? (\n        <Loader />\n      ) : (\n        <>\n          <div className='pane top-pane'>\n            <Editor\n              language='xml'\n              displayName='HTML'\n              value={html}\n              onChange={\n                setHtml\n              }\n            />\n            <Editor\n              language='css'\n              displayName='CSS'\n              value={css}\n              onChange={\n                setCss\n              }\n            />\n            <Editor\n              language='javascript'\n              displayName='JS'\n              value={js}\n              onChange={setJs}\n            />\n          </div>\n          <div className='pane'>\n            <iframe\n              srcDoc={srcDoc}\n              title='output'\n              sandbox='allow-scripts'\n              frameBorder='0'\n              width='100%'\n              height='100%'\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\n    'root'\n  )\n);\n// serviceWorker.register();\n"],"sourceRoot":""}